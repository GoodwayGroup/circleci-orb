description: Install dependencies and run test command

parameters:
  executor-name:
    type: enum
    default: "python-default"
    enum: ["dockerhub-authed", "python-default"]
  executor-repo:
    type: string
    default: "cimg"
  executor-tag:
    type: string
    default: "3.11.2"
  executor-resource-class:
    default: large
    description: Configure the executor resource class
    enum:
      - small
      - medium
      - medium+
      - large
      - xlarge
      - 2xlarge
      - 2xlarge+
    type: enum
  cache-key:
    type: string
    default: v0-dependencies
  coveralls-upload:
    type: boolean
    default: true
  coveralls-steps:
    default:
      - run:
          name: Push to Coveralls
          command: poetry run poe coveralls
    description: |
      Steps to run to send Coveralls report for a codebase
    type: steps
  lint:
    default: true
    description: |
      Lint codebase before test
    type: boolean
  lint-steps:
    default:
      - run:
          name: Run lint
          command: poetry run poe lint
    description: |
      Steps to run to lint a codebase
    type: steps
  test-steps:
    default:
      - run:
          name: Run unit tests
          command: poetry run poe coverage
    description: |
      Steps to run to test a codebase
    type: steps
  store-coverage-artifacts:
    type: boolean
    default: true
    description: |
      If enabled, stores the ./coverage directory as a build artifact
  tar-coverage-artifacts:
    type: boolean
    default: true
    description: |
      If enabled, tars the ./coverage directory into coverage.tar for storage.
  tar-coverage-artifacts-path:
    type: string
    default: test-reports/
    description: |
      Path of coverage directory

executor:
  name: << parameters.executor-name >>
  repo: << parameters.executor-repo >>
  tag: << parameters.executor-tag >>

steps:
  - test-python:
      cache-key: << parameters.cache-key >>
      coveralls-upload: << parameters.coveralls-upload >>
      coveralls-steps:  << parameters.coveralls-steps >>
      test-steps: << parameters.test-steps >>
      lint: << parameters.lint >>
      lint-steps: << parameters.lint-steps >>
      tar-coverage-artifacts-path: << parameters.tar-coverage-artifacts-path >>